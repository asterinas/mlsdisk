diff --git a/src/de/deserializer.rs b/src/de/deserializer.rs
index e0ad7eb..1ad277a 100644
--- a/src/de/deserializer.rs
+++ b/src/de/deserializer.rs
@@ -324,6 +324,7 @@ impl<'de, 'a, F: Flavor<'de>> de::Deserializer<'de> for &'a mut Deserializer<'de
         visitor.visit_u128(v)
     }
 
+    #[cfg(not(no_fp_fmt_parse))]
     #[inline]
     fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value>
     where
@@ -335,6 +336,7 @@ impl<'de, 'a, F: Flavor<'de>> de::Deserializer<'de> for &'a mut Deserializer<'de
         visitor.visit_f32(f32::from_bits(u32::from_le_bytes(buf)))
     }
 
+    #[cfg(not(no_fp_fmt_parse))]
     #[inline]
     fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value>
     where
diff --git a/src/ser/serializer.rs b/src/ser/serializer.rs
index fc85ffd..9305bd2 100644
--- a/src/ser/serializer.rs
+++ b/src/ser/serializer.rs
@@ -157,6 +157,7 @@ where
             .map_err(|_| Error::SerializeBufferFull)
     }
 
+    #[cfg(not(no_fp_fmt_parse))]
     #[inline]
     fn serialize_f32(self, v: f32) -> Result<()> {
         let buf = v.to_bits().to_le_bytes();
@@ -165,6 +166,7 @@ where
             .map_err(|_| Error::SerializeBufferFull)
     }
 
+    #[cfg(not(no_fp_fmt_parse))]
     #[inline]
     fn serialize_f64(self, v: f64) -> Result<()> {
         let buf = v.to_bits().to_le_bytes();
